================================================================
README for Azucar version 0.2.4

Azucar: A SAT-based Constraint Solver

http://code.google.com/p/azucar-solver/

================
FEATURES

Azucar can solve a finite linear Constraint Satisfaction Problem (CSP)
by encoding it into a Boolean Satisfiability Testing Problems (SAT)
and solving the SAT problem by using an external SAT solver.

Azucar uses a new SAT-encoding method named "compact order
encoding". In the compact order encoding, each integer is represented
by using a numeral system of any base, and each digit-wise comparison
is encoded by using order encoding.  In the order encoding, a
comparison x <= a is encoded by a different Boolean variable for each
integer variable x and integer value a.

================
REQUIREMENTS

* Java J2SE 5 or 6

* Perl version 5

* A SAT Solver
  - MiniSat version 1.4 or 2 (http://minisat.se/)
  - PicoSAT version 535 (http://fmv.jku.at/picosat/)
  - RSat (http://reasoning.cs.ucla.edu/rsat/)
  - or any other SAT solver

================
BUILD

$ cd bin
$ make

================
INSTALLATION

* Unzip the downloaded zip package.

* Modify the following variable settings of "bin/azucar" to meet your
  execution environment.

  - $java   : Java command path
  - $jar    : Full path of the azucar-v0.2.4.jar file in the same directory
  - $solver : Path of the SAT solver (e.g. MiniSat)
  - $tmp    : Path prefix for temporally created files

================
USAGE

CSPs (Constraint Satisfaction Problems) can be solved by Azucar.

  $ azucar examples/nqueens-8.csp

See docs/syntax.html for the syntax of Azucar CSP description.

Azucar can also solve CSPs written in XCSP 2.1 format for
the 2008 CSP solver competition (see http://cpai.ucc.ie/08/).

  $ azucar -competition instance.xml

================
DETAILED DESCRIPTION

SAT-encoder and decoder are written in Java.  Perl script "azucar"
uses Java programs and SAT solver in the following way.

* The following temporal files are used.

  - $tmp.csp  : CSP format file
  - $tmp.cnf  : SAT file
  - $tmp.map  : Mapping file
  - $tmp.out  : SAT output file

* XCSP to CSP conversion

  $ java -cp azucar-v0.2.4.jar jp.ac.kobe_u.cs.sugar.XML2CSP file.xml file.csp

  or

  $ tools/xml2csp file.xml -o file.csp

  tools/xml2csp requires Ruby 1.8 or later.

* Encoding CSP to SAT

  $ java -jar azucar-v0.2.4.jar -encode file.csp file.cnf file.map

* Solving SAT

  $ minisat file.cnf file.out

* Decoding SAT output

  $ java -jar azucar-v0.2.4.jar [-competition] -decode file.out file.map

* By default, Azucar divides each integer into two digits.
  For larger domain CSPs (e.g. over 1,000,000), it might be better to
  divide each integer into over two digits by using -m option such as:

  $ azucar -m 4 instance.xml

  In this case, Azucar divides each integer into four digits.

================
LIMITATIONS AND KNOWN BUGS

* Power functions are not supported.

================
PUBLICATIONS

* Naoyuki Tamura, Akiko Taga, Satoshi Kitagawa, Mutsunori Banbara:
  Compiling Finite Linear CSP into SAT,
  Constraints, Volume 14, Number 2, pp.254-272, June, 2009.
  DOI 10.1007/s10601-008-9061-0 (Open Access, You can freely download the paper)
  http://springer.r.delivery.net/r/r?2.1.Ee.2Tp.1gRdFJ.BxsAdG..N.HAQa.38pS.CLWEcC00

* Naoyuki Tamura, Akiko Taga, Satoshi Kitagawa, Mutsunori Banbara:
  Compiling Finite Linear CSP into SAT,
  in Proceedings of the 12th International Conference on Principles
  and Practice of Constraint Programming (CP 2006),
  pp.590-603, 2006.

* Naoyuki Tamura and Mutsunori Banbara:
  Sugar: A CSP to SAT Translator Based on Order Encoding,
  in Proceedings of the Second International CSP Solver Competition,
  pp.65-69, 2008.

* Tomoya Tanjo, Naoyuki Tamura, Mutsunori Banbara:
  Towards a Compact and Efficient SAT-Encoding of Finite Linear CSP,
  The 9th International Workshop on Constraint Modelling and Reformulation (ModRef 2010),
  2010.
  http://www.it.uu.se/research/group/astra/ModRef10/papers/Tomoya%20Tanjo,%20Naoyuki%20Tamura%20and%20Mutsunori%20Banbara.%20Towards%20a%20Compact%20and%20Efficient%20SAT-encoding%20of%20Finite%20Linear%20CSP%20-%20ModRef%202010.pdf

* Tomoya Tanjo, Naoyuki Tamura, Mutsunori Banbara:
  A Compact and Efficient SAT-Encoding of Finite Domain CSP,
  in Proceedings of the Fourteenth International Conference on Theory and
  Applications of Satisfiability Testing (SAT 2011), LNCS 6695,
  pp.375-376, 2011.

* Tomoya Tanjo, Naoyuki Tamura, Mutsunori Banbara:
  Proposal of a compact and efficient SAT encoding using a numeral system of any base,
  The First International Workshop on the Cross-Fertilization Between CSP and SAT (CSPSAT 2011),
  2011.
  http://sysrun.haifa.il.ibm.com/hrl/cspsat2011/papers/tanjo_tamura_banbara%20.pdf

* Tomoya Tanjo, Naoyuki Tamura, Mutsunori Banbara:
  Azucar: A SAT-based CSP solver using the compact order encoding (Tool Presentation),
  in Proceedings of the Fifteenth International Conference on Theory and
  Applications of Satisfiability Testing (SAT 2012), LNCS 7317,
  pp.456-462, 2012.

================
LICENSE

This version of the Azucar software is distributed under the BSD
license (http://www.opensource.org/licenses/bsd-license.php).

See LICENSE file for more details.

================
CONTACTS

Tomoya Tanjo,
Transdisciplinary Research Integration Center
2-1-2 Hitotsubashi, Chiyoda-ku, Tokyo 101-8430, Japan
E-mail: tanjo @ nii.ac.jp

Naoyuki Tamura and Mutsunori Banbara
Information Science and Technology Center, Kobe University
1-1 Rokkodai, Nada, Kobe 657-8501 Japan
E-mail: tamura @ kobe-u.ac.jp, banbara @ kobe-u.ac.jp

================================================================
